{
    "swagger": "2.0",
    "info": {
        "title": "Innobyte Internship Task API's",
        "version": "1.0.0"
    },
    "paths": {
        "/api/signup": {
            "post": {
                "summary": "Register a new user",
                "tags": [
                    "Authentication"
                ],
                "description": "Register a new user with provided details and send email verification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User registration details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 30
                                }
                            },
                            "required": [
                                "firstName",
                                "lastName",
                                "email",
                                "password"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registration successful. Check email for verification.",
                        "schema": {
                            "type": "string",
                            "example": "<html><body><h1>Registration successful!</h1><p>Please check your email to verify your account.</p></body></html>"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or validation error."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "User login endpoint",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User log-in successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Email"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "summary": "Logout endpoint",
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to login page",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string",
                                    "example": "/api/login"
                                },
                                "description": "Redirect URL to the login page"
                            }
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "summary": "Get user profile",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string",
                                    "example": "<html><body><h1>User Profile</h1><p>Welcome, John Doe!</p></body></html>"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - JWT token is missing or invalid",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string",
                                    "example": "<html><body><p>Unauthorized - Please log in.</p></body></html>"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update_profile": {
            "post": {
                "summary": "Update user profile",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update the profile information of the logged-in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User Update details",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                }
                            },
                            "required": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid token)"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/change_password": {
            "post": {
                "summary": "Change user password",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Endpoint to change the password of the logged-in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The new password for the user.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "newPassword": {
                                    "type": "string",
                                    "description": "The new password for the user."
                                }
                            },
                            "required": [
                                "newPassword"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User password changed successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized (missing or invalid token)"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        }
    }
}